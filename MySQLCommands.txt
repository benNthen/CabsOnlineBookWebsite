My SQL Commands used:

1. To create the 'taxi' table database for storing bookings. Note the AUTO_INCREMENT statement on book_id, when ever any data is instered
   into this table, it will automatically assign it the booking reference number under book_id:

create table taxi (
    book_id int(11) not null PRIMARY KEY AUTO_INCREMENT, 
    name varchar(128),
    phone varchar(128),
    addr    varchar(128),
    dest    varchar(128),
    book_date datetime,
    pickup_date  datetime,
    assign_status  tinyint(1)
);


2. To insert the user's input from the booking.html page to the database table created called 'taxi'. Each entry will automatically be given a booking reference number and 
   have their taxi assigned status set to zero:

	INSERT INTO taxi(name, phone, addr, dest, book_date, pickup_date, assign_status) VALUES('$name2','$phone2','$addr2','$dest2','$date','$pickupDate',0);

3. To search for a particular booking using the booking reference number(booking id). The results returned will be the bookings that have only been
	made within the last 2 hours and have not yet been assigned a taxi:

	SELECT * FROM taxi WHERE book_id LIKE '$request%' AND assign_status = 0 AND pickup_date >= DATE_SUB(NOW(), INTERVAL 2 HOUR);

4. Used to check the database table's existence by prompting SQL to query for the table and all of its contents. If number of rows was more than 0
   then the table does exist:
   
   	SELECT * FROM taxi;
							   
4. To update the 'taxi' table database so that the specified booking ID
   in order to assign a taxi:

	UPDATE taxi SET assigned = 1 
	WHERE book_id LIKE '$request%' or book_id LIKE '%$request%';
	
5. To search for a booking that has recently been assigned a taxi. This was used by the PHP server-side to check if a particular booking
   has already been assigned a taxi and to check if a taxi assignment had been successful:
	
	SELECT * FROM taxi WHERE book_id = '$request' AND assign_status = 1;

